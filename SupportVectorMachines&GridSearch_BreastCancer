#################################Support Vector Machines using scikit-learn###############################################
##############################################Breast Cancer Dataset#######################################################


##########Standard Imports##############
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
%matplotlib inline


##########Creating the Dataset##########
from sklearn.datasets import load_breast_cancer

cancer = load_breast_cancer()
cancer.keys()

print(cancer['DESCR'])

cancer['feature_names']

df_feat = pd.DataFrame(cancer['data'],columns=cancer['feature_names'])
df_feat.info()

df_target = pd.DataFrame(cancer['target'],columns=['Cancer'])

df_feat.head()


#########Training the model##########
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(df_feat, np.ravel(df_target), test_size=0.30, random_state=101)

from sklearn.svm import SVC
model = SVC()
model.fit(X_train,y_train)


############Predictions & Performance Evaluation#############

predictions = model.predict(X_test)

from sklearn.metrics import classification_report,confusion_matrix

print(confusion_matrix(y_test,predictions))
print(classification_report(y_test,predictions))


############Parameter Tuning with Gridsearch###########
param_grid = {'C': [0.1,1, 10, 100, 1000], 'gamma': [1,0.1,0.01,0.001,0.0001], 'kernel': ['rbf']}

from sklearn.model_selection import GridSearchCV
grid = GridSearchCV(SVC(),param_grid,refit=True,verbose=3)

grid.fit(X_train,y_train)

#BestFit
grid.best_params_

grid.best_estimator_


grid_predictions = grid.predict(X_test)

print(confusion_matrix(y_test,grid_predictions))
print(classification_report(y_test,grid_predictions))
